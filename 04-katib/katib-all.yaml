---
# Katib CRDs (simplified)
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: experiments.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
# Katib Controller ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: katib-controller
  namespace: kubeflow
---
# Katib Controller Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: katib-controller
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log", "pods/status"]
    verbs: ["*"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["*"]
  - apiGroups: ["kubeflow.org"]
    resources: ["experiments", "experiments/status"]
    verbs: ["*"]
---
# Katib Controller RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: katib-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: katib-controller
subjects:
  - kind: ServiceAccount
    name: katib-controller
    namespace: kubeflow
---
# Katib DB Manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: katib-db-manager
  namespace: kubeflow
  labels:
    app: katib-db-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: katib-db-manager
  template:
    metadata:
      labels:
        app: katib-db-manager
    spec:
      containers:
        - name: katib-db-manager
          image: docker.io/kubeflowkatib/katib-db-manager:v0.16.0
          env:
            - name: DB_NAME
              value: "mysql"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: KATIB_MYSQL_DB_HOST
              value: "mysql-service.ml-infrastructure"
            - name: KATIB_MYSQL_DB_PORT
              value: "3306"
            - name: KATIB_MYSQL_DB_DATABASE
              value: "katib"
          ports:
            - containerPort: 6789
              name: api
          livenessProbe:
            tcpSocket:
              port: 6789
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 6789
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
# Katib DB Manager Service
apiVersion: v1
kind: Service
metadata:
  name: katib-db-manager
  namespace: kubeflow
  labels:
    app: katib-db-manager
spec:
  type: ClusterIP
  ports:
    - port: 6789
      targetPort: 6789
      protocol: TCP
      name: api
  selector:
    app: katib-db-manager
---
# Katib Controller
apiVersion: apps/v1
kind: Deployment
metadata:
  name: katib-controller
  namespace: kubeflow
  labels:
    app: katib-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: katib-controller
  template:
    metadata:
      labels:
        app: katib-controller
    spec:
      serviceAccountName: katib-controller
      containers:
        - name: katib-controller
          image: docker.io/kubeflowkatib/katib-controller:v0.16.0
          command:
            - ./katib-controller
          env:
            - name: KATIB_CORE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - containerPort: 8080
              name: webhook
            - containerPort: 8443
              name: metrics
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
---
# Katib UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: katib-ui
  namespace: kubeflow
  labels:
    app: katib-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: katib-ui
  template:
    metadata:
      labels:
        app: katib-ui
    spec:
      containers:
        - name: katib-ui
          image: docker.io/kubeflowkatib/katib-ui:v0.16.0
          ports:
            - containerPort: 8080
              name: http
          livenessProbe:
            httpGet:
              path: /katib/
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /katib/
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
---
# Katib UI Service
apiVersion: v1
kind: Service
metadata:
  name: katib-ui
  namespace: kubeflow
  labels:
    app: katib-ui
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30777
      protocol: TCP
      name: http
  selector:
    app: katib-ui
---
# Experiment CRD
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: experiments.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Experiment
    listKind: ExperimentList
    plural: experiments
    singular: experiment
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
# Trial CRD
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trials.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Trial
    listKind: TrialList
    plural: trials
    singular: trial
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
# Suggestion CRD
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: suggestions.kubeflow.org
spec:
  group: kubeflow.org
  names:
    kind: Suggestion
    listKind: SuggestionList
    plural: suggestions
    singular: suggestion
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
