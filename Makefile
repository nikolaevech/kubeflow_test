.PHONY: help check install start deploy stop clean uninstall logs port-forward dashboard

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
BLUE := \033[0;34m
GREEN := \033[0;32m
YELLOW := \033[1;33m
NC := \033[0m

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)Kubeflow Platform - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-20s$(NC) %s\n", $$1, $$2}'
	@echo ""

check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@chmod +x check-prerequisites.sh
	@./check-prerequisites.sh

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (Docker, kubectl, Minikube)
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@chmod +x install-prerequisites.sh
	@./install-prerequisites.sh

quick-start: ## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ)
	@echo "$(BLUE)–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Kubeflow Platform...$(NC)"
	@chmod +x quickstart.sh
	@./quickstart.sh

start: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Minikube –∫–ª–∞—Å—Ç–µ—Ä
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ Minikube...$(NC)"
	@chmod +x 00-prerequisites/minikube-setup.sh
	@./00-prerequisites/minikube-setup.sh || { \
		echo "$(YELLOW)‚ö†Ô∏è  Minikube setup completed with warnings$(NC)"; \
		echo "Checking if cluster is accessible..."; \
		if kubectl get nodes >/dev/null 2>&1; then \
			echo "$(GREEN)‚úì Kubernetes cluster is running$(NC)"; \
			echo "$(GREEN)‚úì You can proceed with deployment$(NC)"; \
			exit 0; \
		else \
			echo "$(RED)‚úó Cannot access Kubernetes cluster$(NC)"; \
			exit 1; \
		fi \
	}

deploy: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Kubeflow
	@echo "$(BLUE)–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Kubeflow...$(NC)"
	@chmod +x scripts/deploy-all.sh
	@./scripts/deploy-all.sh

stop: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Minikube (–¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è)
	@echo "$(YELLOW)–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Minikube...$(NC)"
	@minikube stop

clean: ## –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã Kubeflow (Minikube –æ—Å—Ç–∞–µ—Ç—Å—è)
	@echo "$(YELLOW)–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Kubeflow...$(NC)"
	@chmod +x scripts/uninstall.sh
	@./scripts/uninstall.sh

uninstall: ## –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ (–≤–∫–ª—é—á–∞—è Minikube –∫–ª–∞—Å—Ç–µ—Ä)
	@echo "$(YELLOW)–ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ Kubeflow –∏ Minikube...$(NC)"
	@chmod +x scripts/uninstall.sh
	@./scripts/uninstall.sh
	@minikube delete

port-forward: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å port forwarding –¥–ª—è localhost
	@echo "$(BLUE)–ù–∞—Å—Ç—Ä–æ–π–∫–∞ port forwarding...$(NC)"
	@chmod +x scripts/port-forward.sh
	@./scripts/port-forward.sh

dashboard: ## –û—Ç–∫—Ä—ã—Ç—å Kubernetes Dashboard
	@echo "$(BLUE)–û—Ç–∫—Ä—ã—Ç–∏–µ Kubernetes Dashboard...$(NC)"
	@minikube dashboard

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
	@echo "$(BLUE)–õ–æ–≥–∏ Kubeflow –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:$(NC)"
	@echo ""
	@echo "$(GREEN)=== ML Pipeline ===$(NC)"
	@kubectl logs -l app=ml-pipeline -n kubeflow --tail=20
	@echo ""
	@echo "$(GREEN)=== Katib Controller ===$(NC)"
	@kubectl logs -l app=katib-controller -n kubeflow --tail=20
	@echo ""
	@echo "$(GREEN)=== JupyterLab ===$(NC)"
	@kubectl logs -l app=jupyterlab -n kubeflow-user --tail=20

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö –ø–æ–¥–æ–≤
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:$(NC)"
	@echo ""
	@kubectl get pods -A

events: ## –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞
	@echo "$(BLUE)–°–æ–±—ã—Ç–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞:$(NC)"
	@kubectl get events -A --sort-by='.lastTimestamp' | tail -20

urls: ## –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
	@echo "$(BLUE)URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:$(NC)"
	@echo ""
	@MINIKUBE_IP=$$(minikube ip); \
	echo "$(GREEN)Dashboard:$(NC)     http://$$MINIKUBE_IP:30080"; \
	echo "$(GREEN)Pipelines:$(NC)     http://$$MINIKUBE_IP:30888"; \
	echo "$(GREEN)Katib:$(NC)         http://$$MINIKUBE_IP:30777"; \
	echo "$(GREEN)JupyterLab:$(NC)    http://$$MINIKUBE_IP:30666"; \
	echo "$(GREEN)MinIO Console:$(NC) http://$$MINIKUBE_IP:30900"

shell-minio: ## Shell –≤ MinIO pod
	@kubectl exec -it deployment/minio -n ml-infrastructure -- sh

shell-mysql: ## Shell –≤ MySQL pod
	@kubectl exec -it deployment/mysql -n ml-infrastructure -- mysql -uroot -prootpass123

shell-jupyter: ## Shell –≤ JupyterLab pod
	@kubectl exec -it deployment/jupyterlab -n kubeflow-user -- bash

restart-all: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ deployments
	@echo "$(YELLOW)–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö deployments...$(NC)"
	@kubectl rollout restart deployment -n kubeflow
	@kubectl rollout restart deployment -n kubeflow-user
	@kubectl rollout restart deployment -n ml-infrastructure

watch: ## –ù–∞–±–ª—é–¥–∞—Ç—å –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–¥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	@watch -n 2 kubectl get pods -A

test-pipeline: ## –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π pipeline
	@echo "$(BLUE)–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ pipeline...$(NC)"
	@kubectl apply -f - <<EOF
	apiVersion: argoproj.io/v1alpha1
	kind: Workflow
	metadata:
	  generateName: test-pipeline-
	  namespace: kubeflow
	spec:
	  entrypoint: main
	  templates:
	  - name: main
	    container:
	      image: alpine:latest
	      command: [sh, -c]
	      args: ["echo 'Hello from Kubeflow Pipeline!'"]
	EOF
	@echo "$(GREEN)–¢–µ—Å—Ç–æ–≤—ã–π pipeline —Å–æ–∑–¥–∞–Ω!$(NC)"

backup: ## –°–æ–∑–¥–∞—Ç—å backup —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
	@echo "$(BLUE)–°–æ–∑–¥–∞–Ω–∏–µ backup...$(NC)"
	@mkdir -p backups
	@kubectl get all -A -o yaml > backups/kubeflow-backup-$$(date +%Y%m%d-%H%M%S).yaml
	@echo "$(GREEN)Backup —Å–æ–∑–¥–∞–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backups/$(NC)"

info: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Ç–µ—Ä–µ
	@echo "$(BLUE)–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Ç–µ—Ä–µ:$(NC)"
	@echo ""
	@echo "$(GREEN)Minikube:$(NC)"
	@minikube status
	@echo ""
	@echo "$(GREEN)Kubernetes:$(NC)"
	@kubectl version --short
	@echo ""
	@echo "$(GREEN)Nodes:$(NC)"
	@kubectl get nodes
	@echo ""
	@echo "$(GREEN)Namespaces:$(NC)"
	@kubectl get namespaces

# –ê–ª–∏–∞—Å—ã –¥–ª—è —á–∞—Å—Ç—ã—Ö –∫–æ–º–∞–Ω–¥
up: quick-start ## –ê–ª–∏–∞—Å –¥–ª—è quick-start
down: stop ## –ê–ª–∏–∞—Å –¥–ª—è stop
reset: uninstall start deploy ## –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞