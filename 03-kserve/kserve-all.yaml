---
# InferenceService CRD
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: inferenceservices.serving.kserve.io
spec:
  group: serving.kserve.io
  names:
    kind: InferenceService
    listKind: InferenceServiceList
    plural: inferenceservices
    singular: inferenceservice
    shortNames:
      - isvc
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
---
# KServe Controller ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kserve-controller
  namespace: kubeflow
---
# KServe Controller Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kserve-controller
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "endpoints", "events", "configmaps"]
    verbs: ["*"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["*"]
  - apiGroups: ["serving.kserve.io"]
    resources: ["inferenceservices", "inferenceservices/status"]
    verbs: ["*"]
---
# KServe Controller RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kserve-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kserve-controller
subjects:
  - kind: ServiceAccount
    name: kserve-controller
    namespace: kubeflow
---
# KServe ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: inferenceservice-config
  namespace: kubeflow
data:
  storageInitializer: |-
    {
      "image": "kserve/storage-initializer:v0.11.0",
